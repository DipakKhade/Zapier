// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String @id @default(uuid())
  name                String @unique
  email               String? @unique
  password            String
  zap                 Zap[]
  hokTest             HookTest[]
}

model Zap {
  id                  String @id @default(uuid())
  trigger             Trigger?
  action              Action[]
  userId              String
  user                User @relation(fields: [userId], references: [id])
  zapRun              ZapRun[]
  createdAt           DateTime @default(now())
}

model Trigger {
  id                    String @id @default(uuid())
  zapId                 String @unique
  metadata              Json @default("{}")
  availableTriggerId    String
  type                  AvailableTrigger @relation(fields: [availableTriggerId], references: [id])
  zap                   Zap @relation(fields: [zapId], references: [id])
}

model AvailableTrigger {
  id                    String @id @default(uuid())
  name                  String 
  image                 String
  triggers              Trigger[] 
}

model Action {
  id                    String @id @default(uuid())
  zapId                 String 
  metadata              Json @default("{}")
  zap                   Zap @relation(fields: [zapId], references: [id])
  actionId              String 
  type                  AvailableAction  @relation(fields: [actionId], references: [id])
  sortingOrder          Int @default(0)
}

model AvailableAction {
  id                    String @id @default(uuid())
  name                  String
  image                 String
  actions               Action[]
}

model ZapRun {
  id                String @id @default(uuid())
  metadata          Json
  zapId             String
  zap               Zap @relation(fields: [zapId], references: [id])
  zapRunOutBox      ZapRunOutBox?
}

model ZapRunOutBox {
  id                String @id @default(uuid())
  zapRunId          String @unique
  zapRun            ZapRun @relation(fields: [zapRunId], references: [id])
}

model HookTest {
  id                String    @id @default(uuid())
  userId            String
  User              User      @relation(fields: [userId], references: [id])
  metadata         Json?      @default("{}")
  createdAt         DateTime  @default(now())
}